cmake_minimum_required(VERSION 3.1)
SET(TOP_PROJECT_NAME HelloOpenGL)

PROJECT(${TOP_PROJECT_NAME})

SET(TOP_PROJECT_SOURCE_DIR  ${PROJECT_SOURCE_DIR})
SET(TOP_PROJECT_BINARY_DIR  ${PROJECT_BINARY_DIR})
# 指定程序和库的输出路径
SET(TOP_PROJECT_OUTPUT_PATH ${TOP_PROJECT_BINARY_DIR})  # 定义库和可执行程序的输出路径

# Enable/Disable Rpath support
IF (1)
    SET(CMAKE_SKIP_BUILD_RPATH TRUE)                # 编译是不使用RPATH
    SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)       # 编译时不使用安装RPATH
    SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE)    # 安装的执行文件不加上RPAH
ELSE ()
    SET(CMAKE_BUILD_RPATH_USE_ORIGIN TRUE)       # 使能ORIGIN
    SET(CMAKE_BUILD_RPATH "\${ORIGIN}:\${ORIGIN}/lib:\${ORIGIN}/../lib") # 编译是时加上RPATH，可以使用CMAKE_BUILD_WITH_INSTALL_RPATH代替
    SET(CMAKE_SKIP_BUILD_RPATH FALSE)             # 编译时加上RPATH
    SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)      # 编译时使用安装时RPATH
    SET(CMAKE_INSTALL_RPATH "\${ORIGIN}:\${ORIGIN}/lib:\${ORIGIN}/../lib:${PROJECT_SOURCE_DIR}/lib")         # 安装时RPATH
    SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)   # 安装的执行文件加上RPATH
ENDIF ()

FILE(COPY "${TOP_PROJECT_SOURCE_DIR}/thirdparty/OpenGL/lib/glfw3.dll" DESTINATION "${TOP_PROJECT_OUTPUT_PATH}")

SET(SOURCE_FILES ${SOURCE_FILES}
        main.cpp glad.c
        )


INCLUDE(tools/FindOpenGL.cmake)

set(CMAKE_CXX_STANDARD 14)

ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_FILES})

# Link extra libs
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${EXTRA_LIBS})